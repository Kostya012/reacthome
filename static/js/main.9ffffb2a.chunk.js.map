{"version":3,"sources":["logo.svg","Avatar.js","Paragraf.js","Input.js","Greeting.js","AgeDetector.js","Counter.js","Accordion.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Avatar","src","logo","className","alt","Paragraf","React","Component","Input","createElement","Greeting","props","name","message","Message","age","Counter","increment","setState","count","state","decrement","this","id","onClick","Button","content","Accordion","onToggle","isOpen","expanded","btnText","children","defaultProps","App","AgeDetector","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"8FAAAA,EAAOC,QAAU,IAA0B,kC,iLCO5BC,MAJf,WACE,OAAO,yBAAKC,IAAKC,IAAMC,UAAU,WAAWC,IAAI,U,4BCanCC,E,uKAZZ,OAAO,kD,GAFaC,IAAMC,WCKdC,EAND,WACZ,OAAOF,IAAMG,cACX,UCEWC,MAJf,SAAkBC,GAChB,OAAO,sCAAYA,EAAMC,KAAlB,KAA0BD,EAAME,UCc1BC,MAff,SAAiBH,GACf,OAAIA,EAAMI,IAAM,GACP,2IAECJ,EAAMI,KAAO,IAAQJ,EAAMI,KAAO,GACnC,4HAECJ,EAAMI,IAAM,IAAQJ,EAAMI,KAAO,GAClC,6EAEAJ,EAAMI,IAAM,GACZ,gIADJ,GC0BQC,E,kDAlCb,WAAYL,GAAQ,IAAD,8BACjB,cAAMA,IAQRM,UAAY,WACV,EAAKC,SAAS,CACZC,MAAO,EAAKC,MAAMD,MAAQ,KAXX,EAcnBE,UAAY,WACV,EAAKH,SAAS,CACZC,MAAO,EAAKC,MAAMD,MAAQ,KAd5B,EAAKC,MAAQ,CACXD,MAAO,GAHQ,E,qDAoBjB,OACE,6BACE,6BAAMG,KAAKF,MAAMD,OACjB,6FACA,kBAAC,EAAD,CAAOI,GAAG,cACV,kLACA,kBAAC,EAAD,CAAOA,GAAG,eACV,4BAAQC,QAASF,KAAKL,WAAtB,KACA,4BAAQO,QAASF,KAAKD,WAAtB,U,GA7Bcf,IAAMC,WCDtBkB,EAAS,SAAAd,GACb,OAAO,4BAAQa,QAASb,EAAMa,SAAUb,EAAMe,UAG1CC,E,kDACJ,WAAYhB,GAAQ,IAAD,8BACjB,cAAMA,IAORiB,SAAW,WACT,EAAKV,SAAS,CACZW,QAAS,EAAKT,MAAMS,UAPtB,EAAKT,MAAQ,CACXS,OAAQlB,EAAMmB,UAJC,E,qDAejB,IAAMC,EAAUT,KAAKF,MAAMS,OAAS,OAAS,OAE7C,OACE,6BACE,kBAAC,EAAD,CAAQL,QAASF,KAAKM,SAAUF,QAASK,IACxCT,KAAKF,MAAMS,OAASP,KAAKX,MAAMqB,SAAW,U,GArB3B1B,IAAMC,WA2B9BoB,EAAUM,aAAe,CACvBH,UAAU,GAGGH,QCPAO,MAnBf,WACE,OACE,yBAAK/B,UAAU,OACb,4BAAQA,UAAU,cAChB,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAUS,KAAK,OAAOC,QAAU,cAChC,kBAACsB,EAAD,CAAapB,IAAK,KAClB,kBAACoB,EAAD,CAAapB,IAAK,KAClB,kBAAC,EAAD,CAAWe,UAAU,GACnB,4CAEF,kBAAC,EAAD,SCZYM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAMxC,c","file":"static/js/main.9ffffb2a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport logo from './logo.svg';\r\n\r\nfunction Avatar() {\r\n  return <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n};\r\n\r\nexport default Avatar;","import React from 'react';\r\n\r\n\r\nclass Paragraf extends React.Component {\r\n  render() {\r\n   return <p>Hello World! =)</p>;\r\n  }\r\n }\r\n\r\n// const Paragraf = () => {\r\n//   return React.createElement(\r\n//     \"p\",\r\n//     null,\r\n//     \"Hello World! =))\"\r\n//   );\r\n// }\r\n\r\nexport default Paragraf;","import React from 'react';\r\n\r\nconst Input = () => {\r\n  return React.createElement(\r\n    \"input\"\r\n  );\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\n\r\nfunction Greeting(props) {\r\n  return <h1>Hello, {props.name}, {props.message}</h1>\r\n}\r\n\r\nexport default Greeting;","import React from 'react';\r\n\r\nfunction Message(props) {\r\n  if (props.age < 18) {\r\n    return <h1>Упс, ты ещё маленький!</h1>;\r\n  }\r\n  else if ((props.age <= 21) && (props.age >= 18)) {\r\n    return <h1>Добро пожаловать!</h1>;\r\n  }\r\n  else if ((props.age > 21) && (props.age <= 25)) {\r\n    return <h1>Ну ещё ок.</h1>;\r\n  }\r\n  else if (props.age > 25) {\r\n    return <h1>Слишком взрослый</h1>;\r\n  }\r\n};\r\n\r\nexport default Message;","import React from \"react\";\r\nimport Input from \"./Input\";\r\n\r\nclass Counter extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      count: 0\r\n    };\r\n\r\n    // this.increment = this.increment.bind(this);\r\n  }\r\n\r\n  increment = () => {\r\n    this.setState({\r\n      count: this.state.count + 1\r\n    });\r\n  };\r\n  decrement = () => {\r\n    this.setState({\r\n      count: this.state.count - 1\r\n    })\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>{this.state.count}</div>\r\n        <p>Укажите шаг:</p>\r\n        <Input id=\"inputStep\"></Input>\r\n        <p>Укажите начальное значение:</p>\r\n        <Input id=\"inputFirst\"></Input>\r\n        <button onClick={this.increment}>+</button>\r\n        <button onClick={this.decrement}>-</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Counter;","import React from \"react\";\r\n\r\nconst Button = props => {\r\n  return <button onClick={props.onClick}>{props.content}</button>;\r\n};\r\n\r\nclass Accordion extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isOpen: props.expanded\r\n    };\r\n  }\r\n\r\n  onToggle = () => {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const btnText = this.state.isOpen ? \"HIDE\" : \"SHOW\";\r\n\r\n    return (\r\n      <div>\r\n        <Button onClick={this.onToggle} content={btnText} />\r\n        {this.state.isOpen ? this.props.children : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAccordion.defaultProps = {\r\n  expanded: false\r\n};\r\n\r\nexport default Accordion;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Avatar from './Avatar';\nimport Paragraf from './Paragraf';\nimport Input from './Input';\nimport Greeting from './Greeting';\nimport AgeDetector from './AgeDetector';\nimport Counter from './Counter';\nimport Accordion from './Accordion';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Avatar />\n        <Paragraf />\n        <Input />\n        <Greeting name=\"John\" message = \"say hello\"/>\n        <AgeDetector age={17} />\n        <AgeDetector age={22} />\n        <Accordion expanded={false}>\n          <h1>Simple text</h1>\n        </Accordion>\n        <Counter />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}